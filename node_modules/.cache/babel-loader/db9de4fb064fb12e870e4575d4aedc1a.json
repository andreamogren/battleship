{"remainingRequest":"/Users/andreamogren/Developer/battleship/node_modules/babel-loader/lib/index.js!/Users/andreamogren/Developer/battleship/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andreamogren/Developer/battleship/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andreamogren/Developer/battleship/src/components/Battleship.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andreamogren/Developer/battleship/src/components/Battleship.vue","mtime":1555444948000},{"path":"/Users/andreamogren/Developer/battleship/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreamogren/Developer/battleship/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/andreamogren/Developer/battleship/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreamogren/Developer/battleship/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Battleship',\n  data: function data() {\n    return {\n      rows: 7,\n      squares: 7,\n\n      /*randomRow: String,\n      randomCell: String,\n      singleShip: String,\n      Destoryer: String, //2\n      Destoryer2: String, //2\n      Cruiser: String, //3\n      Cruiser2: String, //3\n      Cruiser3: String, //3\n      Submarine: String, //3\n      Submarine2: String, //3 //Göra dessa till objekt istället?\n      Submarine3: String, //3\n      Battleship: String, //4\n      Battleship2: String, //4\n      Battleship3: String, //4\n      Battleship4: String, //4\n      Carrier: String, //5\n      Carrier2: String, //5\n      Carrier3: String, //5\n      Carrier4: String, //5\n      Carrier5: String, //5*/\n      hit: Number,\n      miss: Number,\n      min: 0,\n      max: 6\n    };\n  },\n  methods: {\n    checkHit: function checkHit(event) {\n      //https://codepen.io/CodifyAcademy/pen/ByBEOz\n      console.log(event.target.id);\n      /* Hur göra detta nu? */\n\n      if (event.target.id !== this.randomPosition) {\n        this.hit = false;\n        this.miss = true;\n        console.log(this.hit);\n      }\n\n      if (event.target.id === this.randomPosition) {\n        this.hit = true;\n        this.miss = false;\n        console.log(this.hit);\n        alert(\"nooo me ship!! >:(\");\n      }\n    },\n\n    /* How to not make these numbers overlap */\n    singleShip: function singleShip() {\n      this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.singleShip = this.randomRow + \"-\" + this.randomCell;\n      console.log(\"Single ship\", this.singleShip);\n    },\n    Destroyer: function Destroyer() {\n      this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.Destroyer = this.randomRow + \"-\" + this.randomCell;\n      this.Destroyer2 = this.randomRow + \"-\" + (this.randomCell + 1);\n      console.log(\"Destroyer \", this.Destroyer, this.Destroyer2);\n      console.log(\"Randoms destroyer \", this.randomRow, this.randomCell);\n    },\n    Cruiser: function Cruiser() {\n      this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.Cruiser = this.randomRow + \"-\" + this.randomCell;\n      this.Cruiser2 = this.randomRow + \"-\" + (this.randomCell + 1);\n      this.Cruiser3 = this.randomRow + \"-\" + (this.randomCell + 2);\n      console.log(\"Cruiser\", this.Cruiser, this.Cruiser2, this.Cruiser3);\n    },\n    Submarine: function Submarine() {\n      this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.Submarine = this.randomRow + \"-\" + this.randomCell;\n      this.Submarine2 = this.randomRow + \"-\" + (this.randomCell + 2);\n      this.Submarine3 = this.randomRow + \"-\" + (this.randomCell + 3);\n      console.log(\"Submarine \", this.Submarine, this.Submarine2, this.Submarine3);\n    },\n    Battleship: function Battleship() {\n      this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.Battleship = this.randomRow + \"-\" + this.randomCell;\n      this.Battleship2 = this.randomRow + \"-\" + (this.randomCell + 1);\n      this.Battleship3 = this.randomRow + \"-\" + (this.randomCell + 2);\n      this.Battleship4 = this.randomRow + \"-\" + (this.randomCell + 3);\n      console.log(\"Battleship \", this.Battleship, this.Battleship2, this.Battleship3, this.Battleship4);\n    },\n    Carrier: function Carrier() {\n      this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n      this.Carrier = this.randomRow + \"-\" + this.randomCell;\n      this.Carrier2 = this.randomRow + \"-\" + (this.randomCell + 1);\n      this.Carrier3 = this.randomRow + \"-\" + (this.randomCell + 2);\n      this.Carrier4 = this.randomRow + \"-\" + (this.randomCell + 3);\n      this.Carrier5 = this.randomRow + \"-\" + (this.randomCell + 4);\n      console.log(\"Carrier \", this.Carrier, this.Carrier2, this.Carrier3, this.Carrier4, this.Carrier5);\n    }\n  },\n  mounted: function mounted() {\n    this.singleShip();\n    this.Destroyer();\n    this.Cruiser();\n    this.Submarine();\n    this.Battleship();\n    this.Carrier();\n  }\n};",{"version":3,"sources":["Battleship.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAeA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,CADA;AAEA,MAAA,OAAA,EAAA,CAFA;;AAGA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAA,GAAA,EAAA,MAvBA;AAwBA,MAAA,IAAA,EAAA,MAxBA;AAyBA,MAAA,GAAA,EAAA,CAzBA;AA0BA,MAAA,GAAA,EAAA;AA1BA,KAAA;AA4BA,GA/BA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,KAAA,EAAA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,EAAA;AACA;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,EAAA,KAAA,KAAA,cAAA,EAAA;AACA,aAAA,GAAA,GAAA,KAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,GAAA;AACA;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,EAAA,KAAA,KAAA,cAAA,EAAA;AACA,aAAA,GAAA,GAAA,IAAA;AACA,aAAA,IAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,GAAA;AACA,QAAA,KAAA,CAAA,oBAAA,CAAA;AACA;AACA,KAhBA;;AAiBA;AACA,IAAA,UAAA,EAAA,sBAAA;AACA,WAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,KAAA,GAAA,GAAA,KAAA,GAAA,IAAA,KAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,KAAA,GAAA,GAAA,KAAA,GAAA,IAAA,KAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,KAAA,SAAA,GAAA,GAAA,GAAA,KAAA,UAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,KAAA,UAAA;AACA,KAvBA;AAwBA,IAAA,SAAA,EAAA,qBAAA;AACA,WAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,KAAA,GAAA,GAAA,KAAA,GAAA,IAAA,KAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,KAAA,GAAA,GAAA,KAAA,GAAA,IAAA,KAAA,GAAA,CAAA;AACA,WAAA,SAAA,GAAA,KAAA,SAAA,GAAA,GAAA,GAAA,KAAA,UAAA;AACA,WAAA,UAAA,GAAA,KAAA,SAAA,GAAA,GAAA,IAAA,KAAA,UAAA,GAAA,CAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,YAAA,EAAA,KAAA,SAAA,EAAA,KAAA,UAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,KAAA,SAAA,EAAA,KAAA,UAAA;AACA,KA/BA;AAgCA,IAAA,OAAA,EAAA,mBAAA;AACA,WAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,KAAA,GAAA,GAAA,KAAA,GAAA,IAAA,KAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,KAAA,GAAA,GAAA,KAAA,GAAA,IAAA,KAAA,GAAA,CAAA;AACA,WAAA,OAAA,GAAA,KAAA,SAAA,GAAA,GAAA,GAAA,KAAA,UAAA;AACA,WAAA,QAAA,GAAA,KAAA,SAAA,GAAA,GAAA,IAAA,KAAA,UAAA,GAAA,CAAA,CAAA;AACA,WAAA,QAAA,GAAA,KAAA,SAAA,GAAA,GAAA,IAAA,KAAA,UAAA,GAAA,CAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,KAAA,OAAA,EAAA,KAAA,QAAA,EAAA,KAAA,QAAA;AACA,KAvCA;AAwCA,IAAA,SAAA,EAAA,qgDA,IAAA,UAAA,EAAA,saAAA,EAAA,KAAA,UAAA,EAAA,KAAA,WAAA,EAAA,KAAA,WAAA,EAAA,KAAA,WAAA;AACA,KAxDA;AAyDA,IAAA,OAAA,EAAA,mlEA,GAhCA;AAoGA,EAAA,OApGA,qBAoGA;AACA,SAAA,UAAA;AACA,SAAA,SAAA;AACA,SAAA,OAAA;AACA,SAAA,SAAA;AACA,SAAA,UAAA;AACA,SAAA,OAAA;AACA;AA3GA,CAAA","sourcesContent":["  <template>\n  <div class=\"abc\">\n    <h3>A B C D E F G</h3>\n    <table>\n      <tr v-for=\"(row, rowIndex) in 7\">\n      <td v-for=\"(cell, cellIndex) in 7\" :id=\"rowIndex + '-' + cellIndex\" @click=\"checkHit\"> <!-- :class=\"{ hit: hit, miss: miss }\" -->\n      </td>\n      </tr>\n\n    </table>\n    <h3>0 1 2 3 4 5 6</h3>\n  </div>\n  </template>\n\n  <script>\n  export default {\n  name: 'Battleship',\n  data() {\n    return {\n      rows: 7,\n      squares: 7,\n      /*randomRow: String,\n      randomCell: String,\n      singleShip: String,\n      Destoryer: String, //2\n      Destoryer2: String, //2\n      Cruiser: String, //3\n      Cruiser2: String, //3\n      Cruiser3: String, //3\n      Submarine: String, //3\n      Submarine2: String, //3 //Göra dessa till objekt istället?\n      Submarine3: String, //3\n      Battleship: String, //4\n      Battleship2: String, //4\n      Battleship3: String, //4\n      Battleship4: String, //4\n      Carrier: String, //5\n      Carrier2: String, //5\n      Carrier3: String, //5\n      Carrier4: String, //5\n      Carrier5: String, //5*/\n      hit: Number,\n      miss: Number,\n      min: 0,\n      max: 6,\n    };\n  },\n  methods: {\n    checkHit: function (event) {\n      //https://codepen.io/CodifyAcademy/pen/ByBEOz\n      console.log(event.target.id);\n      /* Hur göra detta nu? */\n      if (event.target.id !== this.randomPosition){\n        this.hit = false;\n        this.miss = true;\n        console.log(this.hit);\n      }\n      if (event.target.id === this.randomPosition){\n          this.hit = true;\n          this.miss = false;\n          console.log(this.hit);\n          alert(\"nooo me ship!! >:(\");\n        }\n      },\n      /* How to not make these numbers overlap */\n        singleShip: function() {\n          this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.singleShip = this.randomRow + \"-\" + this.randomCell;\n          console.log(\"Single ship\", this.singleShip);\n        },\n        Destroyer: function (){\n          this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.Destroyer = this.randomRow + \"-\" + this.randomCell;\n          this.Destroyer2 = this.randomRow + \"-\" + (this.randomCell + 1);\n          console.log(\"Destroyer \", this.Destroyer, this.Destroyer2);\n          console.log(\"Randoms destroyer \", this.randomRow, this.randomCell);\n        },\n        Cruiser: function(){\n          this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.Cruiser = this.randomRow + \"-\" + this.randomCell;\n          this.Cruiser2 = this.randomRow + \"-\" + (this.randomCell + 1);\n          this.Cruiser3 = this.randomRow + \"-\" + (this.randomCell + 2);\n          console.log(\"Cruiser\", this.Cruiser, this.Cruiser2, this.Cruiser3);\n        },\n        Submarine: function() {\n          this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.Submarine = this.randomRow + \"-\" + this.randomCell;\n          this.Submarine2 = this.randomRow + \"-\" + (this.randomCell + 2);\n          this.Submarine3 = this.randomRow + \"-\" + (this.randomCell + 3);\n          console.log(\"Submarine \", this.Submarine, this.Submarine2, this.Submarine3);\n        },\n        Battleship: function () {\n          this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.Battleship = this.randomRow + \"-\" + this.randomCell;\n          this.Battleship2 = this.randomRow + \"-\" + (this.randomCell + 1);\n          this.Battleship3 = this.randomRow + \"-\" + (this.randomCell + 2);\n          this.Battleship4 = this.randomRow + \"-\" + (this.randomCell + 3);\n          console.log(\"Battleship \", this.Battleship, this.Battleship2, this.Battleship3, this.Battleship4);\n        },\n        Carrier: function () {\n          this.randomRow = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.randomCell = Math.floor(Math.random() * (this.max - this.min) + this.min);\n          this.Carrier = this.randomRow + \"-\" + this.randomCell;\n          this.Carrier2 = this.randomRow + \"-\" + (this.randomCell + 1);\n          this.Carrier3 = this.randomRow + \"-\" + (this.randomCell + 2);\n          this.Carrier4 = this.randomRow + \"-\" + (this.randomCell + 3);\n          this.Carrier5 = this.randomRow + \"-\" + (this.randomCell + 4);\n          console.log(\"Carrier \", this.Carrier, this.Carrier2, this.Carrier3, this.Carrier4, this.Carrier5);\n        }\n    },\n    mounted(){\n      this.singleShip();\n      this.Destroyer();\n      this.Cruiser();\n      this.Submarine();\n      this.Battleship();\n      this.Carrier();\n    }\n  }\n  </script>\n\n  <style lang=\"less\" scoped>\n  table {\n  display: inline-block;\n\n  td {\n    border: 1px solid green;\n    height: 50px;\n    width: 50px;\n    }\n  }\n\n  h3 {\n    &:first-of-type {\n      letter-spacing: 0.2rem;\n      display: inline-block;\n      writing-mode: vertical-rl;\n      text-orientation: upright;\n    }\n\n    &:last-of-type {\n      letter-spacing: 1.2rem;\n      margin-left: 5rem;\n    }\n  }\n  </style>\n"],"sourceRoot":"src/components"}]}